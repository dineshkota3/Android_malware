.class public Lcom/ps/pintu/model/utils/ThumbnailUtils;
.super Ljava/lang/Object;
.source "ThumbnailUtils.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/ps/pintu/model/utils/ThumbnailUtils$SizedThumbnailBitmap;
    }
.end annotation


# static fields
.field private static final MAX_NUM_PIXELS_MICRO_THUMBNAIL:I = 0x4000

.field private static final MAX_NUM_PIXELS_THUMBNAIL:I = 0x30000

.field private static final OPTIONS_NONE:I = 0x0

.field public static final OPTIONS_RECYCLE_INPUT:I = 0x2

.field private static final OPTIONS_SCALE_UP:I = 0x1

.field private static final TAG:Ljava/lang/String; = "ThumbnailUtils"

.field public static final TARGET_SIZE_MICRO_THUMBNAIL:I = 0x60

.field public static final TARGET_SIZE_MINI_THUMBNAIL:I = 0x140

.field private static final UNCONSTRAINED:I = -0x1


# direct methods
.method public constructor <init>()V
    .locals 0

    .prologue
    .line 15
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method private static closeSilently(Landroid/os/ParcelFileDescriptor;)V
    .locals 1
    .param p0, "c"    # Landroid/os/ParcelFileDescriptor;

    .prologue
    .line 188
    if-nez p0, :cond_0

    .line 195
    :goto_0
    return-void

    .line 191
    :cond_0
    :try_start_0
    invoke-virtual {p0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_0
    .catch Ljava/lang/Throwable; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 192
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method private static computeInitialSampleSize(Landroid/graphics/BitmapFactory$Options;II)I
    .locals 12
    .param p0, "options"    # Landroid/graphics/BitmapFactory$Options;
    .param p1, "minSideLength"    # I
    .param p2, "maxNumOfPixels"    # I

    .prologue
    const/4 v11, 0x1

    const/4 v10, -0x1

    .line 123
    iget v6, p0, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    int-to-double v4, v6

    .line 124
    .local v4, "w":D
    iget v6, p0, Landroid/graphics/BitmapFactory$Options;->outHeight:I

    int-to-double v0, v6

    .line 125
    .local v0, "h":D
    if-ne p2, v10, :cond_0

    move v2, v11

    .line 127
    .local v2, "lowerBound":I
    :goto_0
    if-ne p1, v10, :cond_1

    const/16 v6, 0x80

    move v3, v6

    .line 130
    .local v3, "upperBound":I
    :goto_1
    if-ge v3, v2, :cond_2

    move v6, v2

    .line 140
    :goto_2
    return v6

    .line 126
    .end local v2    # "lowerBound":I
    .end local v3    # "upperBound":I
    :cond_0
    mul-double v6, v4, v0

    int-to-double v8, p2

    div-double/2addr v6, v8

    invoke-static {v6, v7}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v6

    invoke-static {v6, v7}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v6

    double-to-int v6, v6

    move v2, v6

    goto :goto_0

    .line 128
    .restart local v2    # "lowerBound":I
    :cond_1
    int-to-double v6, p1

    div-double v6, v4, v6

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v6

    .line 129
    int-to-double v8, p1

    div-double v8, v0, v8

    .line 128
    invoke-static {v8, v9}, Ljava/lang/Math;->floor(D)D

    move-result-wide v8

    invoke-static {v6, v7, v8, v9}, Ljava/lang/Math;->min(DD)D

    move-result-wide v6

    double-to-int v6, v6

    move v3, v6

    goto :goto_1

    .line 134
    .restart local v3    # "upperBound":I
    :cond_2
    if-ne p2, v10, :cond_3

    .line 135
    if-ne p1, v10, :cond_3

    move v6, v11

    .line 136
    goto :goto_2

    .line 137
    :cond_3
    if-ne p1, v10, :cond_4

    move v6, v2

    .line 138
    goto :goto_2

    :cond_4
    move v6, v3

    .line 140
    goto :goto_2
.end method

.method private static computeSampleSize(Landroid/graphics/BitmapFactory$Options;II)I
    .locals 3
    .param p0, "options"    # Landroid/graphics/BitmapFactory$Options;
    .param p1, "minSideLength"    # I
    .param p2, "maxNumOfPixels"    # I

    .prologue
    .line 107
    invoke-static {p0, p1, p2}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->computeInitialSampleSize(Landroid/graphics/BitmapFactory$Options;II)I

    move-result v0

    .line 110
    .local v0, "initialSize":I
    const/16 v2, 0x8

    if-gt v0, v2, :cond_1

    .line 111
    const/4 v1, 0x1

    .line 112
    .local v1, "roundedSize":I
    :goto_0
    if-lt v1, v0, :cond_0

    .line 118
    :goto_1
    return v1

    .line 113
    :cond_0
    shl-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 116
    .end local v1    # "roundedSize":I
    :cond_1
    add-int/lit8 v2, v0, 0x7

    div-int/lit8 v2, v2, 0x8

    mul-int/lit8 v1, v2, 0x8

    .restart local v1    # "roundedSize":I
    goto :goto_1
.end method

.method public static extractThumbnail(Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;
    .locals 1
    .param p0, "source"    # Landroid/graphics/Bitmap;
    .param p1, "width"    # I
    .param p2, "height"    # I

    .prologue
    .line 55
    const/4 v0, 0x0

    invoke-static {p0, p1, p2, v0}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->extractThumbnail(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method

.method public static extractThumbnail(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;
    .locals 5
    .param p0, "source"    # Landroid/graphics/Bitmap;
    .param p1, "width"    # I
    .param p2, "height"    # I
    .param p3, "options"    # I

    .prologue
    .line 72
    if-nez p0, :cond_0

    .line 73
    const/4 v3, 0x0

    .line 85
    :goto_0
    return-object v3

    .line 76
    :cond_0
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    if-ge v3, v4, :cond_1

    .line 77
    int-to-float v3, p1

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v4

    int-to-float v4, v4

    div-float v1, v3, v4

    .line 81
    .local v1, "scale":F
    :goto_1
    new-instance v0, Landroid/graphics/Matrix;

    invoke-direct {v0}, Landroid/graphics/Matrix;-><init>()V

    .line 82
    .local v0, "matrix":Landroid/graphics/Matrix;
    invoke-virtual {v0, v1, v1}, Landroid/graphics/Matrix;->setScale(FF)V

    .line 84
    or-int/lit8 v3, p3, 0x1

    .line 83
    invoke-static {v0, p0, p1, p2, v3}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->transform(Landroid/graphics/Matrix;Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;

    move-result-object v2

    .local v2, "thumbnail":Landroid/graphics/Bitmap;
    move-object v3, v2

    .line 85
    goto :goto_0

    .line 79
    .end local v0    # "matrix":Landroid/graphics/Matrix;
    .end local v1    # "scale":F
    .end local v2    # "thumbnail":Landroid/graphics/Bitmap;
    :cond_1
    int-to-float v3, p2

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    int-to-float v4, v4

    div-float v1, v3, v4

    .restart local v1    # "scale":F
    goto :goto_1
.end method

.method private static makeBitmap(IILandroid/net/Uri;Landroid/content/ContentResolver;Landroid/os/ParcelFileDescriptor;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    .locals 7
    .param p0, "minSideLength"    # I
    .param p1, "maxNumOfPixels"    # I
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "cr"    # Landroid/content/ContentResolver;
    .param p4, "pfd"    # Landroid/os/ParcelFileDescriptor;
    .param p5, "options"    # Landroid/graphics/BitmapFactory$Options;

    .prologue
    const/4 v6, -0x1

    const/4 v5, 0x0

    .line 157
    const/4 v0, 0x0

    .line 159
    .local v0, "b":Landroid/graphics/Bitmap;
    if-nez p4, :cond_0

    .line 160
    :try_start_0
    invoke-static {p2, p3}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->makeInputStream(Landroid/net/Uri;Landroid/content/ContentResolver;)Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catch Ljava/lang/OutOfMemoryError; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object p4

    .line 161
    :cond_0
    if-nez p4, :cond_1

    .line 182
    invoke-static {p4}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->closeSilently(Landroid/os/ParcelFileDescriptor;)V

    move-object v4, v5

    .line 184
    :goto_0
    return-object v4

    .line 163
    :cond_1
    if-nez p5, :cond_2

    .line 164
    :try_start_1
    new-instance v3, Landroid/graphics/BitmapFactory$Options;

    invoke-direct {v3}, Landroid/graphics/BitmapFactory$Options;-><init>()V

    .end local p5    # "options":Landroid/graphics/BitmapFactory$Options;
    .local v3, "options":Landroid/graphics/BitmapFactory$Options;
    move-object p5, v3

    .line 165
    .end local v3    # "options":Landroid/graphics/BitmapFactory$Options;
    .restart local p5    # "options":Landroid/graphics/BitmapFactory$Options;
    :cond_2
    invoke-virtual {p4}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v2

    .line 166
    .local v2, "fd":Ljava/io/FileDescriptor;
    const/4 v4, 0x1

    iput v4, p5, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 167
    const/4 v4, 0x1

    iput-boolean v4, p5, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 168
    const/4 v4, 0x0

    invoke-static {v2, v4, p5}, Landroid/graphics/BitmapFactory;->decodeFileDescriptor(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;

    .line 169
    iget-boolean v4, p5, Landroid/graphics/BitmapFactory$Options;->mCancel:Z

    if-nez v4, :cond_3

    iget v4, p5, Landroid/graphics/BitmapFactory$Options;->outWidth:I

    if-eq v4, v6, :cond_3

    .line 170
    iget v4, p5, Landroid/graphics/BitmapFactory$Options;->outHeight:I
    :try_end_1
    .catch Ljava/lang/OutOfMemoryError; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-ne v4, v6, :cond_4

    .line 182
    :cond_3
    invoke-static {p4}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->closeSilently(Landroid/os/ParcelFileDescriptor;)V

    move-object v4, v5

    .line 171
    goto :goto_0

    .line 173
    :cond_4
    :try_start_2
    invoke-static {p5, p0, p1}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->computeSampleSize(Landroid/graphics/BitmapFactory$Options;II)I

    move-result v4

    iput v4, p5, Landroid/graphics/BitmapFactory$Options;->inSampleSize:I

    .line 175
    const/4 v4, 0x0

    iput-boolean v4, p5, Landroid/graphics/BitmapFactory$Options;->inJustDecodeBounds:Z

    .line 176
    const/4 v4, 0x0

    iput-boolean v4, p5, Landroid/graphics/BitmapFactory$Options;->inDither:Z

    .line 177
    sget-object v4, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    iput-object v4, p5, Landroid/graphics/BitmapFactory$Options;->inPreferredConfig:Landroid/graphics/Bitmap$Config;

    .line 178
    const/4 v4, 0x0

    invoke-static {v2, v4, p5}, Landroid/graphics/BitmapFactory;->decodeFileDescriptor(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;
    :try_end_2
    .catch Ljava/lang/OutOfMemoryError; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result-object v0

    .line 182
    invoke-static {p4}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->closeSilently(Landroid/os/ParcelFileDescriptor;)V

    move-object v4, v0

    .line 184
    goto :goto_0

    .line 179
    .end local v2    # "fd":Ljava/io/FileDescriptor;
    :catch_0
    move-exception v4

    move-object v1, v4

    .line 182
    .local v1, "ex":Ljava/lang/OutOfMemoryError;
    invoke-static {p4}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->closeSilently(Landroid/os/ParcelFileDescriptor;)V

    move-object v4, v5

    .line 180
    goto :goto_0

    .line 181
    .end local v1    # "ex":Ljava/lang/OutOfMemoryError;
    :catchall_0
    move-exception v4

    .line 182
    invoke-static {p4}, Lcom/ps/pintu/model/utils/ThumbnailUtils;->closeSilently(Landroid/os/ParcelFileDescriptor;)V

    .line 183
    throw v4
.end method

.method private static makeInputStream(Landroid/net/Uri;Landroid/content/ContentResolver;)Landroid/os/ParcelFileDescriptor;
    .locals 2
    .param p0, "uri"    # Landroid/net/Uri;
    .param p1, "cr"    # Landroid/content/ContentResolver;

    .prologue
    .line 200
    :try_start_0
    const-string v1, "r"

    invoke-virtual {p1, p0, v1}, Landroid/content/ContentResolver;->openFileDescriptor(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    .line 202
    :goto_0
    return-object v1

    .line 201
    :catch_0
    move-exception v1

    move-object v0, v1

    .line 202
    .local v0, "ex":Ljava/io/IOException;
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private static transform(Landroid/graphics/Matrix;Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;
    .locals 8
    .param p0, "scaler"    # Landroid/graphics/Matrix;
    .param p1, "source"    # Landroid/graphics/Bitmap;
    .param p2, "targetWidth"    # I
    .param p3, "targetHeight"    # I
    .param p4, "options"    # I

    .prologue
    .line 211
    and-int/lit8 v0, p4, 0x1

    if-eqz v0, :cond_2

    const/4 v0, 0x1

    move v2, v0

    .line 212
    .local v2, "scaleUp":Z
    :goto_0
    and-int/lit8 p4, p4, 0x2

    if-eqz p4, :cond_3

    .end local p4    # "options":I
    const/4 p4, 0x1

    move v7, p4

    .line 213
    .local v7, "recycle":Z
    :goto_1
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getWidth()I

    move-result p4

    sub-int v0, p4, p2

    .line 214
    .local v0, "deltaX":I
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getHeight()I

    move-result p4

    sub-int v1, p4, p3

    .line 215
    .local v1, "deltaY":I
    if-nez v2, :cond_4

    if-ltz v0, :cond_0

    if-gez v1, :cond_4

    .line 223
    :cond_0
    sget-object p0, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    .line 222
    .end local p0    # "scaler":Landroid/graphics/Matrix;
    invoke-static {p2, p3, p0}, Landroid/graphics/Bitmap;->createBitmap(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    move-result-object p0

    .line 224
    .local p0, "b2":Landroid/graphics/Bitmap;
    new-instance p4, Landroid/graphics/Canvas;

    invoke-direct {p4, p0}, Landroid/graphics/Canvas;-><init>(Landroid/graphics/Bitmap;)V

    .line 225
    .local p4, "c":Landroid/graphics/Canvas;
    const/4 v2, 0x0

    div-int/lit8 v0, v0, 0x2

    .end local v0    # "deltaX":I
    .end local v2    # "scaleUp":Z
    invoke-static {v2, v0}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 226
    .local v0, "deltaXHalf":I
    const/4 v2, 0x0

    div-int/lit8 v1, v1, 0x2

    .end local v1    # "deltaY":I
    invoke-static {v2, v1}, Ljava/lang/Math;->max(II)I

    move-result v1

    .line 227
    .local v1, "deltaYHalf":I
    new-instance v3, Landroid/graphics/Rect;

    .line 228
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v2

    invoke-static {p2, v2}, Ljava/lang/Math;->min(II)I

    move-result v2

    add-int/2addr v2, v0

    .line 229
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    invoke-static {p3, v4}, Ljava/lang/Math;->min(II)I

    move-result v4

    add-int/2addr v4, v1

    .line 227
    invoke-direct {v3, v0, v1, v2, v4}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 230
    .local v3, "src":Landroid/graphics/Rect;
    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    move-result v0

    .end local v0    # "deltaXHalf":I
    sub-int v0, p2, v0

    div-int/lit8 v1, v0, 0x2

    .line 231
    .local v1, "dstX":I
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    move-result v0

    sub-int v0, p3, v0

    div-int/lit8 v2, v0, 0x2

    .line 232
    .local v2, "dstY":I
    new-instance v0, Landroid/graphics/Rect;

    sub-int/2addr p2, v1

    .line 233
    sub-int/2addr p3, v2

    .line 232
    invoke-direct {v0, v1, v2, p2, p3}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 234
    .end local p2    # "targetWidth":I
    .end local p3    # "targetHeight":I
    .local v0, "dst":Landroid/graphics/Rect;
    const/4 p2, 0x0

    invoke-virtual {p4, p1, v3, v0, p2}, Landroid/graphics/Canvas;->drawBitmap(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Paint;)V

    .line 235
    if-eqz v7, :cond_1

    .line 236
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->recycle()V

    .line 279
    .end local v0    # "dst":Landroid/graphics/Rect;
    .end local v1    # "dstX":I
    .end local v2    # "dstY":I
    .end local v3    # "src":Landroid/graphics/Rect;
    .end local p4    # "c":Landroid/graphics/Canvas;
    :cond_1
    :goto_2
    return-object p0

    .line 211
    .end local v7    # "recycle":Z
    .local p0, "scaler":Landroid/graphics/Matrix;
    .restart local p2    # "targetWidth":I
    .restart local p3    # "targetHeight":I
    .local p4, "options":I
    :cond_2
    const/4 v0, 0x0

    move v2, v0

    goto :goto_0

    .line 212
    .end local p4    # "options":I
    .local v2, "scaleUp":Z
    :cond_3
    const/4 p4, 0x0

    move v7, p4

    goto :goto_1

    .line 240
    .local v0, "deltaX":I
    .local v1, "deltaY":I
    .restart local v7    # "recycle":Z
    :cond_4
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getWidth()I

    move-result p4

    int-to-float v1, p4

    .line 241
    .local v1, "bitmapWidthF":F
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getHeight()I

    move-result p4

    int-to-float v0, p4

    .line 242
    .local v0, "bitmapHeightF":F
    div-float p4, v1, v0

    .line 243
    .local p4, "bitmapAspect":F
    int-to-float v2, p2

    int-to-float v3, p3

    div-float/2addr v2, v3

    .line 244
    .local v2, "viewAspect":F
    cmpl-float p4, p4, v2

    if-lez p4, :cond_a

    .line 245
    .end local p4    # "bitmapAspect":F
    int-to-float p4, p3

    div-float/2addr p4, v0

    .line 246
    .local p4, "scale":F
    const v0, 0x3f666666    # 0.9f

    cmpg-float v0, p4, v0

    if-ltz v0, :cond_5

    .end local v0    # "bitmapHeightF":F
    const/high16 v0, 0x3f800000    # 1.0f

    cmpl-float v0, p4, v0

    if-lez v0, :cond_9

    .line 247
    :cond_5
    invoke-virtual {p0, p4, p4}, Landroid/graphics/Matrix;->setScale(FF)V

    .line 260
    :goto_3
    if-eqz p0, :cond_d

    .line 262
    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getWidth()I

    .end local v1    # "bitmapWidthF":F
    .end local v2    # "viewAspect":F
    move-result v3

    .line 263
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v4

    const/4 v6, 0x1

    move-object v0, p1

    move-object v5, p0

    .line 262
    invoke-static/range {v0 .. v6}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;

    move-result-object p0

    .line 267
    .local p0, "b1":Landroid/graphics/Bitmap;
    :goto_4
    if-eqz v7, :cond_6

    if-eq p0, p1, :cond_6

    .line 268
    invoke-virtual {p1}, Landroid/graphics/Bitmap;->recycle()V

    .line 270
    :cond_6
    const/4 p4, 0x0

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getWidth()I

    .end local p4    # "scale":F
    move-result v0

    sub-int/2addr v0, p2

    invoke-static {p4, v0}, Ljava/lang/Math;->max(II)I

    move-result p4

    .line 271
    .local p4, "dx1":I
    const/4 v0, 0x0

    invoke-virtual {p0}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v1

    sub-int/2addr v1, p3

    invoke-static {v0, v1}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 272
    .local v0, "dy1":I
    div-int/lit8 p4, p4, 0x2

    .end local p4    # "dx1":I
    div-int/lit8 v0, v0, 0x2

    .end local v0    # "dy1":I
    invoke-static {p0, p4, v0, p2, p3}, Landroid/graphics/Bitmap;->createBitmap(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;

    move-result-object p2

    .line 274
    .local p2, "b2":Landroid/graphics/Bitmap;
    if-eq p2, p0, :cond_8

    .line 275
    if-nez v7, :cond_7

    if-eq p0, p1, :cond_8

    .line 276
    :cond_7
    invoke-virtual {p0}, Landroid/graphics/Bitmap;->recycle()V

    :cond_8
    move-object p0, p2

    .line 279
    .end local p2    # "b2":Landroid/graphics/Bitmap;
    .local p0, "b2":Landroid/graphics/Bitmap;
    goto :goto_2

    .line 249
    .restart local v1    # "bitmapWidthF":F
    .restart local v2    # "viewAspect":F
    .local p0, "scaler":Landroid/graphics/Matrix;
    .local p2, "targetWidth":I
    .local p4, "scale":F
    :cond_9
    const/4 p0, 0x0

    goto :goto_3

    .line 252
    .end local p4    # "scale":F
    .local v0, "bitmapHeightF":F
    :cond_a
    int-to-float p4, p2

    div-float/2addr p4, v1

    .line 253
    .restart local p4    # "scale":F
    const v0, 0x3f666666    # 0.9f

    cmpg-float v0, p4, v0

    if-ltz v0, :cond_b

    .end local v0    # "bitmapHeightF":F
    const/high16 v0, 0x3f800000    # 1.0f

    cmpl-float v0, p4, v0

    if-lez v0, :cond_c

    .line 254
    :cond_b
    invoke-virtual {p0, p4, p4}, Landroid/graphics/Matrix;->setScale(FF)V

    goto :goto_3

    .line 256
    :cond_c
    const/4 p0, 0x0

    goto :goto_3

    .line 265
    :cond_d
    move-object p0, p1

    .local p0, "b1":Landroid/graphics/Bitmap;
    goto :goto_4
.end method
