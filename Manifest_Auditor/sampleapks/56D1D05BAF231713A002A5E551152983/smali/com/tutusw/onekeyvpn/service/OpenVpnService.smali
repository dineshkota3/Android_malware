.class public final Lcom/tutusw/onekeyvpn/service/OpenVpnService;
.super Landroid/app/Service;
.source "OpenVpnService.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/tutusw/onekeyvpn/service/OpenVpnService$ServiceBinder;
    }
.end annotation


# static fields
.field static final TAG:Ljava/lang/String; = "OpenVPN-CtrlSh"

.field private static sRunningInstance:Ljava/lang/ref/WeakReference;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/tutusw/onekeyvpn/service/OpenVpnService;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field final mBinder:Landroid/os/IBinder;

.field private mComDir:Ljava/io/File;

.field private mConfigDir:Ljava/io/File;

.field private mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

.field private final mRegistry:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/io/File;",
            "Lcom/tutusw/onekeyvpn/service/DaemonMonitor;",
            ">;"
        }
    .end annotation
.end field

.field final mToastHandler:Landroid/os/Handler;


# direct methods
.method static constructor <clinit>()V
    .locals 1

    .prologue
    .line 34
    const/4 v0, 0x0

    sput-object v0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    .line 24
    return-void
.end method

.method public constructor <init>()V
    .locals 2

    .prologue
    .line 73
    invoke-direct {p0}, Landroid/app/Service;-><init>()V

    .line 64
    new-instance v0, Lcom/tutusw/onekeyvpn/service/OpenVpnService$1;

    invoke-direct {v0, p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService$1;-><init>(Lcom/tutusw/onekeyvpn/service/OpenVpnService;)V

    iput-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mToastHandler:Landroid/os/Handler;

    .line 83
    new-instance v0, Lcom/tutusw/onekeyvpn/service/OpenVpnService$ServiceBinder;

    invoke-direct {v0, p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService$ServiceBinder;-><init>(Lcom/tutusw/onekeyvpn/service/OpenVpnService;)V

    iput-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mBinder:Landroid/os/IBinder;

    .line 122
    new-instance v0, Ljava/util/HashMap;

    const/4 v1, 0x4

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(I)V

    iput-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    .line 74
    return-void
.end method

.method private final daemonAttach()V
    .locals 5

    .prologue
    .line 250
    const-string v1, "OpenVPN-CtrlSh"

    const-string v2, "trying to attach to already running daemons"

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 251
    invoke-static {p0}, Lcom/tutusw/onekeyvpn/Preferences;->configs(Landroid/content/Context;)Ljava/util/ArrayList;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-nez v2, :cond_0

    .line 258
    return-void

    .line 251
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/io/File;

    .line 254
    .local v0, "config":Ljava/io/File;
    invoke-virtual {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    invoke-static {v2}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object v2

    .line 255
    invoke-static {v0}, Lcom/tutusw/onekeyvpn/Preferences;->KEY_CONFIG_INTENDED_STATE(Ljava/io/File;)Ljava/lang/String;

    move-result-object v3

    const/4 v4, 0x0

    .line 254
    invoke-interface {v2, v3, v4}, Landroid/content/SharedPreferences;->getBoolean(Ljava/lang/String;Z)Z

    move-result v2

    .line 252
    invoke-virtual {p0, v0, v2}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->daemonAttach(Ljava/io/File;Z)V

    goto :goto_0
.end method

.method public static final isServiceStarted()Z
    .locals 2

    .prologue
    .line 38
    sget-object v1, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    if-nez v1, :cond_0

    .line 40
    const/4 v0, 0x0

    .line 51
    .local v0, "isServiceStarted":Z
    :goto_0
    return v0

    .line 42
    .end local v0    # "isServiceStarted":Z
    :cond_0
    sget-object v1, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    invoke-virtual {v1}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v1

    if-nez v1, :cond_1

    .line 44
    const/4 v0, 0x0

    .line 45
    .restart local v0    # "isServiceStarted":Z
    const/4 v1, 0x0

    sput-object v1, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    goto :goto_0

    .line 49
    .end local v0    # "isServiceStarted":Z
    :cond_1
    const/4 v0, 0x1

    .restart local v0    # "isServiceStarted":Z
    goto :goto_0
.end method

.method private markServiceStarted()V
    .locals 1

    .prologue
    .line 54
    new-instance v0, Ljava/lang/ref/WeakReference;

    invoke-direct {v0, p0}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    sput-object v0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    .line 55
    return-void
.end method

.method private markServiceStopped()V
    .locals 1

    .prologue
    .line 57
    const/4 v0, 0x0

    sput-object v0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sRunningInstance:Ljava/lang/ref/WeakReference;

    .line 58
    return-void
.end method

.method private declared-synchronized shutdown()V
    .locals 6

    .prologue
    .line 166
    monitor-enter p0

    :try_start_0
    const-string v3, "OpenVPN-CtrlSh"

    const-string v4, "shuting down"

    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 168
    new-instance v1, Ljava/util/ArrayList;

    iget-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 171
    .local v1, "daemonMonitors":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/tutusw/onekeyvpn/service/DaemonMonitor;>;"
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_0
    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-nez v4, :cond_1

    .line 185
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-nez v4, :cond_2

    .line 193
    iget-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

    invoke-virtual {v3}, Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;->stopListening()V

    .line 194
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 195
    monitor-exit p0

    return-void

    .line 171
    :cond_1
    :try_start_1
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 173
    .local v0, "daemonMonitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->isAlive()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 175
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->stop()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 166
    .end local v0    # "daemonMonitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    .end local v1    # "daemonMonitors":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/tutusw/onekeyvpn/service/DaemonMonitor;>;"
    :catchall_0
    move-exception v3

    monitor-exit p0

    throw v3

    .line 185
    .restart local v1    # "daemonMonitors":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/tutusw/onekeyvpn/service/DaemonMonitor;>;"
    :cond_2
    :try_start_2
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 187
    .restart local v0    # "daemonMonitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :try_start_3
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->waitForTermination()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 188
    :catch_0
    move-exception v2

    .line 189
    .local v2, "e":Ljava/lang/InterruptedException;
    :try_start_4
    const-string v4, "OpenVPN-CtrlSh"

    const-string v5, "shutdown"

    invoke-static {v4, v5, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    goto :goto_1
.end method

.method private declared-synchronized startup()V
    .locals 4

    .prologue
    .line 126
    monitor-enter p0

    :try_start_0
    const-string v1, "OpenVPN-CtrlSh"

    const-string v2, "starting"

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 129
    invoke-static {p0}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object v0

    .line 131
    .local v0, "sharedPreferences":Landroid/content/SharedPreferences;
    invoke-static {p0, v0}, Lcom/tutusw/onekeyvpn/Preferences;->getConfigDir(Landroid/content/Context;Landroid/content/SharedPreferences;)Ljava/io/File;

    move-result-object v1

    iput-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConfigDir:Ljava/io/File;

    .line 132
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "mConfigDir="

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConfigDir:Ljava/io/File;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 133
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConfigDir:Ljava/io/File;

    if-nez v1, :cond_0

    .line 134
    const-string v1, "OpenVPN-CtrlSh"

    const-string v2, "Missing path to configuration directory!"

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 135
    :cond_0
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConfigDir:Ljava/io/File;

    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v1

    if-nez v1, :cond_1

    .line 136
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "configuration directory not found: "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConfigDir:Ljava/io/File;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 139
    :cond_1
    new-instance v1, Ljava/io/File;

    invoke-virtual {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->getFilesDir()Ljava/io/File;

    move-result-object v2

    const-string v3, "com.d"

    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iput-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    .line 140
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v1

    if-nez v1, :cond_2

    .line 141
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    invoke-virtual {v1}, Ljava/io/File;->mkdirs()Z

    .line 142
    :cond_2
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "mComDir="

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 144
    invoke-direct {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->daemonAttach()V

    .line 146
    new-instance v1, Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

    invoke-direct {v1}, Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;-><init>()V

    iput-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

    .line 147
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

    new-instance v2, Lcom/tutusw/onekeyvpn/service/OpenVpnService$2;

    invoke-direct {v2, p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService$2;-><init>(Lcom/tutusw/onekeyvpn/service/OpenVpnService;)V

    .line 158
    const/4 v3, 0x0

    .line 147
    invoke-virtual {v1, v2, v3}, Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;->registerHandler(Landroid/os/Handler;I)V

    .line 161
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mConnectivity:Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;

    invoke-virtual {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->getApplicationContext()Landroid/content/Context;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/tutusw/onekeyvpn/util/NetworkConnectivityListener;->startListening(Landroid/content/Context;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 162
    monitor-exit p0

    return-void

    .line 126
    .end local v0    # "sharedPreferences":Landroid/content/SharedPreferences;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method


# virtual methods
.method declared-synchronized daemonAttach(Ljava/io/File;Z)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;
    .param p2, "start"    # Z

    .prologue
    .line 199
    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 201
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": is running and already attached"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 242
    :cond_0
    :goto_0
    monitor-exit p0

    return-void

    .line 203
    :cond_1
    if-eqz p2, :cond_2

    :try_start_1
    invoke-static {p0, p1}, Lcom/tutusw/onekeyvpn/Preferences;->getVpnDnsEnabled(Landroid/content/Context;Ljava/io/File;)Z

    move-result v1

    if-eqz v1, :cond_2

    invoke-virtual {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isVpnDnsActive()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 205
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " only one VPN DNS may be active at a time, aborting"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 199
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 209
    :cond_2
    :try_start_2
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": trying to attach"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 211
    new-instance v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 214
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    .line 211
    invoke-direct {v0, p0, p1, v1}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;-><init>(Lcom/tutusw/onekeyvpn/service/OpenVpnService;Ljava/io/File;Ljava/io/File;)V

    .line 217
    .local v0, "daemonMonitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->isAlive()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 219
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": successfully attached"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 220
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 221
    if-nez p2, :cond_0

    .line 223
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": daemon is disabled in settings, stopping"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 224
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->daemonStop(Ljava/io/File;)V

    goto/16 :goto_0

    .line 227
    :cond_3
    if-eqz p2, :cond_4

    .line 229
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": not attached"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 230
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": daemon is enabled in settings, starting"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 231
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->start()V

    .line 234
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_0

    .line 238
    :cond_4
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": not attached"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 239
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": daemon is disabled in settings, not starting"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0
.end method

.method public daemonPassphrase(Ljava/io/File;Ljava/lang/String;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;
    .param p2, "passphrase"    # Ljava/lang/String;

    .prologue
    .line 338
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 340
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 347
    :goto_0
    return-void

    .line 344
    :cond_0
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 345
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0, p2}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->supplyPassphrase(Ljava/lang/String;)V

    goto :goto_0
.end method

.method public final declared-synchronized daemonQueryState(Ljava/io/File;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;

    .prologue
    .line 325
    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 327
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 334
    :goto_0
    monitor-exit p0

    return-void

    .line 331
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 332
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->queryState()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 325
    .end local v0    # "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final declared-synchronized daemonRestart()V
    .locals 3

    .prologue
    .line 305
    monitor-enter p0

    :try_start_0
    invoke-static {p0}, Lcom/tutusw/onekeyvpn/Preferences;->configs(Landroid/content/Context;)Ljava/util/ArrayList;

    move-result-object v1

    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    if-nez v2, :cond_1

    .line 308
    monitor-exit p0

    return-void

    .line 305
    :cond_1
    :try_start_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/io/File;

    .line 306
    .local v0, "config":Ljava/io/File;
    invoke-virtual {p0, v0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 307
    invoke-virtual {p0, v0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->daemonRestart(Ljava/io/File;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 305
    .end local v0    # "config":Ljava/io/File;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final declared-synchronized daemonRestart(Ljava/io/File;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;

    .prologue
    .line 291
    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 293
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 301
    :goto_0
    monitor-exit p0

    return-void

    .line 297
    :cond_0
    :try_start_1
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " restarting"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 298
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 299
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->restart()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 291
    .end local v0    # "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final declared-synchronized daemonStart(Ljava/io/File;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;

    .prologue
    .line 262
    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 264
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is already running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 287
    :goto_0
    monitor-exit p0

    return-void

    .line 266
    :cond_0
    :try_start_1
    invoke-static {p0, p1}, Lcom/tutusw/onekeyvpn/Preferences;->getVpnDnsEnabled(Landroid/content/Context;Ljava/io/File;)Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-virtual {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isVpnDnsActive()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 268
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " only one VPN DNS may be active at a time, aborting"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 269
    const-string v1, "VPN DNS is only supported in one tunnel!"

    const/4 v2, 0x1

    invoke-static {p0, v1, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;

    move-result-object v1

    invoke-virtual {v1}, Landroid/widget/Toast;->show()V

    .line 272
    invoke-virtual {p1}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    move-result-object v1

    .line 273
    const/4 v2, 0x3

    .line 271
    invoke-static {v1, v2}, Lcom/tutusw/onekeyvpn/Intents;->daemonStateChanged(Ljava/lang/String;I)Landroid/content/Intent;

    move-result-object v1

    .line 270
    invoke-virtual {p0, v1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sendStickyBroadcast(Landroid/content/Intent;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 262
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1

    .line 279
    :cond_1
    :try_start_2
    new-instance v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 282
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mComDir:Ljava/io/File;

    .line 279
    invoke-direct {v0, p0, p1, v1}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;-><init>(Lcom/tutusw/onekeyvpn/service/OpenVpnService;Ljava/io/File;Ljava/io/File;)V

    .line 284
    .local v0, "daemonMonitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->start()V

    .line 285
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto :goto_0
.end method

.method public final declared-synchronized daemonStop(Ljava/io/File;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;

    .prologue
    .line 312
    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 314
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 321
    :goto_0
    monitor-exit p0

    return-void

    .line 318
    :cond_0
    :try_start_1
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 319
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->stop()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0

    .line 312
    .end local v0    # "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public daemonUsernamePassword(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V
    .locals 4
    .param p1, "config"    # Ljava/io/File;
    .param p2, "username"    # Ljava/lang/String;
    .param p3, "password"    # Ljava/lang/String;

    .prologue
    .line 351
    invoke-virtual {p0, p1}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->isDaemonStarted(Ljava/io/File;)Z

    move-result v1

    if-nez v1, :cond_0

    .line 353
    const-string v1, "OpenVPN-CtrlSh"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is not running"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 360
    :goto_0
    return-void

    .line 357
    :cond_0
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 358
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0, p2, p3}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->supplyUsernamePassword(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_0
.end method

.method public final declared-synchronized hasDaemonsStarted()Z
    .locals 3

    .prologue
    .line 369
    monitor-enter p0

    :try_start_0
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    if-nez v2, :cond_1

    .line 372
    const/4 v1, 0x0

    :goto_0
    monitor-exit p0

    return v1

    .line 369
    :cond_1
    :try_start_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 370
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->isAlive()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    if-eqz v2, :cond_0

    .line 371
    const/4 v1, 0x1

    goto :goto_0

    .line 369
    .end local v0    # "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public final declared-synchronized isDaemonStarted(Ljava/io/File;)Z
    .locals 1
    .param p1, "config"    # Ljava/io/File;

    .prologue
    .line 364
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->isAlive()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    monitor-exit p0

    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public final declared-synchronized isVpnDnsActive()Z
    .locals 3

    .prologue
    .line 377
    monitor-enter p0

    :try_start_0
    iget-object v1, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mRegistry:Ljava/util/HashMap;

    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v2

    if-nez v2, :cond_1

    .line 380
    const/4 v1, 0x0

    :goto_0
    monitor-exit p0

    return v1

    .line 377
    :cond_1
    :try_start_1
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;

    .line 378
    .local v0, "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    invoke-virtual {v0}, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->isAlive()Z

    move-result v2

    if-eqz v2, :cond_0

    iget-object v2, v0, Lcom/tutusw/onekeyvpn/service/DaemonMonitor;->mConfigFile:Ljava/io/File;

    invoke-static {p0, v2}, Lcom/tutusw/onekeyvpn/Preferences;->getVpnDnsEnabled(Landroid/content/Context;Ljava/io/File;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    if-eqz v2, :cond_0

    .line 379
    const/4 v1, 0x1

    goto :goto_0

    .line 377
    .end local v0    # "monitor":Lcom/tutusw/onekeyvpn/service/DaemonMonitor;
    :catchall_0
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public onBind(Landroid/content/Intent;)Landroid/os/IBinder;
    .locals 1
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 87
    iget-object v0, p0, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->mBinder:Landroid/os/IBinder;

    return-object v0
.end method

.method public onCreate()V
    .locals 3

    .prologue
    .line 93
    invoke-super {p0}, Landroid/app/Service;->onCreate()V

    .line 94
    invoke-direct {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->startup()V

    .line 95
    new-instance v0, Landroid/content/Intent;

    sget-object v1, Lcom/tutusw/onekeyvpn/Intents;->OPEN_VPN_SERVICE_STARTED:Ljava/lang/String;

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->sendBroadcast(Landroid/content/Intent;)V

    .line 96
    invoke-static {p0}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 97
    const-string v1, "openvpn_enabled"

    const/4 v2, 0x1

    .line 96
    invoke-interface {v0, v1, v2}, Landroid/content/SharedPreferences$Editor;->putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 98
    invoke-interface {v0}, Landroid/content/SharedPreferences$Editor;->commit()Z

    .line 99
    invoke-direct {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->markServiceStarted()V

    .line 100
    return-void
.end method

.method public onDestroy()V
    .locals 3

    .prologue
    .line 104
    invoke-super {p0}, Landroid/app/Service;->onDestroy()V

    .line 105
    invoke-direct {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->markServiceStopped()V

    .line 106
    invoke-static {p0}, Landroid/preference/PreferenceManager;->getDefaultSharedPreferences(Landroid/content/Context;)Landroid/content/SharedPreferences;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/SharedPreferences;->edit()Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 107
    const-string v1, "openvpn_enabled"

    const/4 v2, 0x0

    .line 106
    invoke-interface {v0, v1, v2}, Landroid/content/SharedPreferences$Editor;->putBoolean(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;

    move-result-object v0

    .line 108
    invoke-interface {v0}, Landroid/content/SharedPreferences$Editor;->commit()Z

    .line 109
    invoke-direct {p0}, Lcom/tutusw/onekeyvpn/service/OpenVpnService;->shutdown()V

    .line 110
    return-void
.end method
